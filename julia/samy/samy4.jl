include("tiling.jl")
include("plot.jl")

function samy()
	t = Tiling()
	p(x) = add_point!(t, x)
	l(x, y) = link!(t, x, y)
	c(x) = t.points[x]
	ngon(x, y, n) = add_regular_polygon!(t, x, y, n)

	ngon(Point(0, 0), Point(0, 1), 12)
	ngon(2,1, 12)
	l(3,22)
	l(12,13)
	ngon(13,12,12)
	l(10,23)
	l(30,15)
	ngon(15,30, 3)
	ngon(15,31, 4)
	ngon(30,29, 4)
	ngon(16,32,6)
	ngon(17,36,4)
	ngon(18,37,6)
	ngon(19,40,4)
	ngon(31,33,3)
	ngon(31,42,3)
	ngon(29,28,3)
	l(43,33)
	ngon(43,28,3)
	ngon(34,32,4)
	ngon(42,33,4)
	l(45,47)
	l(43,46)
	ngon(43,44, 6)
	ngon(46,50,4)
	ngon(48,44,4)
	ngon(53,52,3)
	ngon(37,36,12)
	ngon(38,62,4)
	ngon(39,63,4)
	ngon(65,64,3)
	ngon(65,66,3)
	ngon(67,66,4)
	ngon(55,35,4)
	l(45,70)
	ngon(45,47,3)
	l(51,71)
	ngon(70,45,4)
	ngon(56,55,6)
	ngon(56,74,4)
	ngon(57,75,3)
	l(58,76)
	ngon(62,61,3)
	l(63,77)
	ngon(58,76,4)
	l(59,79)
	ngon(59,79,3)
	ngon(59, 80, 4)
	ngon(60,81,3)
	l(61,82)
	ngon(61,82,4)
	ngon(77,83,3)
	ngon(63,77,4)

	q = centroid([c(x) for x in (1,12,13)])
	f(z) = q + (z - q) * exp(im * 2 * pi / 3)

	# symmetrize according to f
	for i = 1:2
		for (u, v) in copy(t.edges)
			l(f(t.points[u]), f(t.points[v]))
		end
	end

	return t
end

t = samy()

fig = Figure(size = (1000, 1000))
ax = Axis(fig[1, 1], aspect = DataAspect(), title = "Samy", xlabel = "X", ylabel = "Y")

plot(t, ax, :red, show_points = true, text = true)

display(fig)
